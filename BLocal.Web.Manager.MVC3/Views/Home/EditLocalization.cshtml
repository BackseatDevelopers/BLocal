@using BLocal.Web.Manager.MVC3.Controllers
@model IEnumerable<BLocal.Web.Manager.MVC3.Controllers.HomeController.LocalizedPart>
@{
    Layout = null;
}
<!DOCTYPE html>
<html>
<head>
    <title>Localization management</title>
    <link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/Site.css")"/>
    <script src="@Url.Content("~/Scripts/jquery-1.4.4.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/homebrew.popup.js")" type="text/javascript"></script>
    <script type="text/javascript">
        $(document).ready(function () {

            $("section.values").hide();
            $(".open").click(function () {
                $("section.values").show();
            });
            $(".collapse").click(function () {
                $("section.values").hide();
            });
            $(".reload").click(function () {
                window.location.reload();
            });
            $(".hardreload").click(function () {
                window.location = '@Url.Action("ReloadLocalization")';
            });

            $("h2").click(function () {
                var valueChildren = $(this).parent(".part").find(".values");
                var anyVisible = valueChildren.filter(":visible").length > 0;
                if (anyVisible)
                    valueChildren.hide();
                else
                    valueChildren.show();
            });

            var create = function (part, key, locale, contenttype, content, callback) {
                $.ajax({
                    url: '@Url.Action("Create", "Home")',
                    data: { part: part, key: key, locale: locale, contenttype: contenttype, content: content },
                    type: 'POST',
                    success: callback,
                    error: function () {
                        alert(":'(");
                    }
                });
            };

            var remove = function (part, key, locale, callback) {
                $.ajax({
                    url: '@Url.Action("Remove", "Home")',
                    data: { part: part, key: key, locale: locale },
                    type: 'POST',
                    success: callback,
                    error: function () {
                        alert(":'(");
                    }
                });
            };

            var details = $.popup($("#details"));
            $(".values > p").click(function () {
                var p = $(this);
                details.onOpen = function (elements) {
                    var part = p.parent(".values").parent(".part").children("h2").children("span.title").html();
                    var key = p.find(".key").html();
                    var locale = p.find(".locale").html();
                    var contenttype = p.find(".contenttype").html();
                    var content = p.find(".content").html();

                    var partEl = elements.find("input.part").val(part);
                    var keyEl = elements.find("input.key").val(key);
                    var localeEl = elements.find("input.locale").val(locale);
                    var contenttypeEl = elements.find("input.contenttype").val(contenttype);
                    var contentEl = elements.find("textarea.content").val(content);

                    elements.find(".updatecopy").click(function () {
                        create(partEl.val(), keyEl.val(), localeEl.val(), contenttypeEl.val(), contentEl.val(), function () {
                            if (partEl.val() == part && localeEl.val() == locale && keyEl.val() == key)
                                p.find(".content").html(contentEl.val());
                            details.close();
                        });
                    });
                    elements.find(".updaterecreate").click(function () {
                        remove(part, key, locale, function () {
                            create(partEl.val(), keyEl.val(), localeEl.val(), contenttypeEl.val(), contentEl.val(), function () {
                                if (partEl.val() == part && localeEl.val() == locale && keyEl.val() == key)
                                    p.find(".content").html(contentEl.val());
                                else
                                    p.remove();
                                details.close();
                            });
                        });
                    });
                    elements.find(".updatedelete").click(function () {
                        remove(part, key, locale, function () {
                            p.remove();
                            details.close();
                        });
                    });
                };
                details.open();
            });

            $("input.dofilter").click(function () {

                var autohide = $("input.autohide:checked").length == 1;
                $(".values > p").show().removeAttr("data-hidden");
                $("section.part").show();

                $("input.filter").each(function () {
                    var filter = $(this);
                    var filterval = $(this).val().toLowerCase();
                    if (filterval.length == 0)
                        return true;

                    var filterspans = $("span." + filter.attr("id"));
                    filterspans.each(function () {
                        if ($(this).html().toLowerCase().indexOf(filterval) == -1)
                            $(this).parent("p").hide().attr("data-hidden", "");
                    });

                    return true;
                });

                if (autohide) {
                    $("section.part").each(function () {
                        if ($(this).find("section.values > p:not([data-hidden])").length == 0)
                            $(this).hide();
                    });
                }
                $(".result").html("displaying " + ($(".values > p").length - $(".values > p[data-hidden]").length) + " out of " + $(".values > p").length + " values");
            });
        });
    </script>
</head>

<body>
    <h1>@Html.ActionLink("Home", "Overview") - Manual Edit - [@(((HomeController.ProviderPair) Session["manualProviderPair"]).Name)]</h1>
    <p><span class="open">open</span> | <span class="collapse">collapse</span> | <span class="reload">reload</span> | <span class="hardreload" title="dump localization cache, reload from scratch">hard reload</span></p>
    
    <section class="general">
        <h2>Filter</h2>
        <div><label for="key">Key</label> <input type="text" class="filter" id="key" /></div>
        <div><label for="locale">Locale</label> <input type="text" class="filter" id="locale" /></div>
        <div><label for="contenttype">Content Type</label> <input type="text" class="filter" id="contenttype" /></div>
        <div><label for="content">Content</label> <input type="text" class="filter" id="content" /></div>
        <div><label for="autohide">Auto-hide</label> <input class="autohide" id="autohide" type="checkbox" checked="checked" /></div>
        <div><input type="button" class="dofilter" value="filter" /></div>
        <div><p class="result"></p></div>
    </section>

    @foreach(var localizedPart in Model) {
        @RenderPart(localizedPart)
    }

    @helper RenderPart(HomeController.LocalizedPart part) {
        <section class="part">
            <h2><span class="title">@part.Part.ToString()</span> [@part.Localizations.Count]</h2>
            <section class="values">
                @foreach (var value in part.Localizations.OrderBy(value => value.Qualifier.Key).ThenBy(value => value.Qualifier.Locale.Name)) {
                    <p>
                        <span class="key">@value.Qualifier.Key</span>
                        <span class="locale">@value.Qualifier.Locale</span>
                        <span class="contenttype">@value.Value.ContentType</span>
                        <span class="lastlog">@value.LastAcces</span>
                        <span class="content" title="@Html.Encode(value.Value.Content.Replace(@"""", @"'"))">@Html.Encode(value.Value.Content)</span>
                        <span class="clear"></span>
                    </p>
                }
            </section>
            @foreach(var subpart in part.Subparts) {
                @RenderPart(subpart)
            }
        </section>
    }
    
    <div id="details" class="popup">
        <h2>Details</h2>
        <form>
            <p><span class="lbl part">Part</span><span class="lbl key">Key</span><span class="lbl locale">Locale</span><span class="lbl contenttype">Type</span></p>
            <p><input type="text" class="val part"></input><input type="text" class="val key"></input><input type="text" class="val locale"></input><input type="text" class="val contenttype"></input></p>
            <p><span class="lbl">Content</span></p>
            <div><textarea class="content"></textarea></div>
            <div><input type="button" class="updatecopy" value="Update Copy" title="creates a copy if key or part changed, does not delete original" /> <input type="button" class="updaterecreate" value="Update Recreate" title="deletes current value, recreates to new value" /> <input class="updatedelete" type="button" value="Clean Delete" title="bye-bye" /> (visible changes are indications, press reload to confirm)</div>
        </form>
    </div>

</body>
</html>