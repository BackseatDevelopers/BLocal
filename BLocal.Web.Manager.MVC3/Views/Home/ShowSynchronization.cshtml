@model BLocal.Web.Manager.Models.SynchronizationData
@{
    ViewBag.Title = "Synchronization";
}
@section Head {
    <script type="text/javascript">
        $(document).ready(function() {
            $("button.select").click(function() {
                $(this).parents(".general").find("input[type=checkbox]").prop("checked", true);
            });
            $("button.deselect").click(function() {
                $(this).parents(".general").find("input[type=checkbox]").prop("checked", false);
            });
            $("button.delete, button.duplicate").click(function() {
                var remove = $(this).hasClass("delete");
                var checkboxes = $(this).parents(".general").find("input[type=checkbox]:checked");
                if (!confirm((remove ? "Delete" : "Duplicate") + " " + checkboxes.length + " items?"))
                    return true;

                var data = {};
                var counter = 0;
                checkboxes.each(function() {
                    data["items[" + counter + "].side"] = $(this).attr("data-side");
                    data["items[" + counter + "].part"] = $(this).attr("data-part");
                    data["items[" + counter + "].key"] = $(this).attr("data-key");
                    data["items[" + counter + "].locale"] = $(this).attr("data-locale");
                    counter++;
                });


                $.ajax({
                    url: remove ? '@Url.Action("SyncRemove", "Home")' : '@Url.Action("SyncDuplicate", "Home")',
                    data: data,
                    type: 'POST',
                    success: function() {
                        window.location.reload();
                    },
                    error: function() {
                        alert("Something went wrong. Check your internet connection and try again. If the problem persists, contact IT.");
                    }
                });

                return true;
            });
            $("tr").click(function(e) {
                if ($(e.originalEvent.srcElement).is("input"))
                    return true;

                var check = $(this).find("input[type=checkbox]");
                check.prop("checked", function(i, val) { return !val; });

                return true;
            });
            $(".locktoggle").click(function() {
                var toggler = $(this);
                var isOn = toggler.is(".on");
                if (isOn) {
                    toggler.removeClass("on");
                    $("section.comparison button").prop("disabled", true);
                } else {
                    toggler.addClass("on");
                    $("section.comparison button").prop("disabled", false);
                }
                var swap = toggler.attr("value");
                toggler.attr("value", toggler.attr("data-alt")).attr("data-alt", swap);
            });
            $("section.comparison button").click(function() {
                var element = $(this).parents(".difference");
                $.ajax({
                    url: '@Url.Action("SyncDuplicate", "Home")',
                    data: {
                        'items[0].side': $(this).attr("data-side"),
                        'items[0].part': $(this).attr("data-part"),
                        'items[0].key': $(this).attr("data-key"),
                        'items[0].locale': $(this).attr("data-locale")
                    },
                    type: 'POST',
                    success: function() {
                        element.remove();
                    },
                    error: function() {
                        alert("Something went wrong. Check your internet connection and try again. If the problem persists, contact IT.");
                    }
                });
            });
        });
    </script>
}

<h1>@Html.ActionLink("Home", "Overview") - Synchronization between <span class="accent">@Model.LeftName</span> and <span class="accent">@Model.RightName</span></h1>

<section class="general" data-from="left">
    <h2>Values from <span class="accent">@Model.LeftName</span> which are missing on <span class="accent">@Model.RightName</span> (@Model.LeftValuesNotRight.Length)</h2>
    <p>
        <button class="select">Select All</button>
        <button class="deselect">Deselect All</button>
        <button class="delete">Delete from <span class="accent">@Model.LeftName</span></button>
        <button class="duplicate">Create on <span class="accent">@Model.RightName</span></button>
    </p>
    <table cellpadding="0" cellspacing="0"><tbody>
        @foreach (var value in Model.LeftValuesNotRight) {
            <tr class="lrvalue">
                <td style="white-space: nowrap">
                    <input type="checkbox" name="values" data-side="Left" data-part="@value.Qualifier.Part" data-locale="@value.Qualifier.Locale" data-key="@value.Qualifier.Key"/>
                </td>
                <td style="white-space: nowrap;">
                    @value.Qualifier.Key <br />
                    <span class="localepart">@value.Qualifier.Locale | @value.Qualifier.Part</span>
                </td>
                <td style="width: 99%;">@value.Value</td>
            </tr>
        }
    </tbody></table>
</section>
<section class="general" data-from="right">
    <h2>Values from <span class="accent">@Model.RightName</span> which are missing on <span class="accent">@Model.LeftName</span> (@Model.RightValuesNotLeft.Length)</h2>
    <p>
        <button class="select">Select All</button>
        <button class="deselect">Deselect All</button>
        <button class="delete">Delete from <span class="accent">@Model.RightName</span></button>
        <button class="duplicate">Create on <span class="accent">@Model.LeftName</span></button>
    </p>
    <table cellpadding="0" cellspacing="0"><tbody>
        @foreach (var value in Model.RightValuesNotLeft) {
            <tr class="lrvalue">
                <td style="white-space: nowrap">
                    <input type="checkbox" name="values" data-side="Right" data-part="@value.Qualifier.Part" data-locale="@value.Qualifier.Locale" data-key="@value.Qualifier.Key"/>
                </td>
                <td style="white-space: nowrap;">
                    @value.Qualifier.Key <br />
                    <span class="localepart">@value.Qualifier.Locale | @value.Qualifier.Part</span>
                </td>
                <td style="width: 99%;">@value.Value</td>
            </tr>
        }
    </tbody></table>
</section>
<section class="general">
    <h2>Qualifiers whose values differ between the two (@Model.ValueDifferences.Length)</h2>
    <p>
        <input class="locktoggle" type="button" value="Unlock change buttons below" data-alt="Lock change buttons below"/>
    </p>
    @foreach (var value in Model.ValueDifferences) {
        <section class="difference">
            <h2>@value.Left.Qualifier.Key</h2>
            <p class="localepart">@value.Left.Qualifier.Locale | @value.Left.Qualifier.Part</p>
            <section class="comparison">
                <div class="left">
                    <p>@value.Left.Value</p>
                    <p>
                        <button data-side="Left" data-part="@value.Left.Qualifier.Part" data-locale="@value.Left.Qualifier.Locale" data-key="@value.Left.Qualifier.Key" disabled="disabled">
                            Change on <span class="accent">@Model.RightName</span> using this value
                        </button>
                    </p>
                </div>
                <div class="right">
                    <p>@value.Right.Value</p>
                    <p>
                        <button data-side="Right" data-part="@value.Right.Qualifier.Part" data-locale="@value.Right.Qualifier.Locale" data-key="@value.Right.Qualifier.Key" disabled="disabled">
                            Change on <span class="accent">@Model.LeftName</span> using this value
                        </button>
                    </p>
                </div>
                <div class="clear"></div>
            </section>
        </section>
    }
</section>