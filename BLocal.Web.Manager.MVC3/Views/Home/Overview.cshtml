@using BLocal.Web.Manager.Configuration
@using BLocal.Web.Manager.Models.AutomaticSynchronization
@model BLocal.Web.Manager.Models.Home.ConnectionData
@{
    ViewBag.Title = "Localization Manager";
}
@section Head {
    <script type="text/javascript">
        $(document).ready(function() {
            $("select[name='providerConfigName']").change(function() {
                $(this).parents("form").submit();
            });
            $("select[name='rightConfigName'], select[name='leftConfigName']").change(function() {
                if ($("select[name='rightConfigName']").val() != "loc-flar" && $("select[name='leftConfigName']").val() != "loc-flar")
                    $(this).parents("form").submit();
            });
        });
    </script>
}

<h1>Localization Manager</h1>

<section class="general">
    <h2>Direct Editing</h2>
    <p>Manually edit (find, add, change, remove) any parts of the localization in any language. If caching is turned on in connected applications, changes will not immediately be visible and a manual refresh of said cache is recommended after editing.</p>
    @using (Html.BeginForm("LoadLocalization", "Home", FormMethod.Post))
    {
        <select name="providerConfigName">
            <option>Select a connection to get started.</option>
            @foreach (var config in ProviderConfig.ProviderGroups)
            {
                <option>@config.Name</option>
            }
        </select>
    }
</section>
    
<section class="general left">
    <h2>Transparant Synchronization</h2>
    <p>Editing should rarely be done directly into the production environment. Using this feature, you can edit in your test (or dev or staging) environment and synchronize directly to production!</p>
    @using (Html.BeginForm("Synchronize", "Home", FormMethod.Post))
    {
        <select name="leftConfigName">
            <option value="loc-flar">Select two providers to get a synrchronization overview.</option>
            @foreach (var config in ProviderConfig.ProviderGroups)
            {
                <option>@config.Name</option>
            }
        </select>
        <select name="rightConfigName">
            <option value="loc-flar">Select two providers to get a synrchronization overview.</option>
            @foreach (var config in ProviderConfig.ProviderGroups)
            {
                <option>@config.Name</option>
            }
        </select>
    }
</section>
<section class="general left">
    <h2>Automatic Synchronization</h2>
    <p>Automatically synchronize between two environments.</p>
    @using (Html.BeginForm("Index", "AutomaticSynchronization", FormMethod.Get))
    {
        <div class="automatic">
            <select name="LeftProviderGroupName">
                <option value="empty">Left side</option>
                @foreach (var config in ProviderConfig.ProviderGroups)
                {
                    <option>@config.Name</option>
                }
            </select>
            <select name="RightProviderGroupName">
                <option value="empty">Right side</option>
                @foreach (var config in ProviderConfig.ProviderGroups)
                {
                    <option>@config.Name</option>
                }
            </select>
            <select name="LeftMissingStrategy">
                <option value="empty">When values are missing on the left side.</option>
                @foreach (var missingStrategyName in Enum.GetNames(typeof(SynchronizationSettings.MissingResolutionStrategy)))
                {
                    <option>@missingStrategyName</option>
                }
            </select>
            <select name="RightMissingStrategy">
                <option value="empty">When values are missing on the right side.</option>
                @foreach (var missingStrategyName in Enum.GetNames(typeof(SynchronizationSettings.MissingResolutionStrategy)))
                {
                    <option>@missingStrategyName</option>
                }
            </select>
            <select name="DifferingStrategy">
                <option value="empty">When values are different left and right.</option>
                @foreach (var differingStrategyName in Enum.GetNames(typeof(SynchronizationSettings.DifferingResolutionStrategy)))
                {
                    <option>@differingStrategyName</option>
                }
            </select>
            <select name="Execute">
                <option value="empty">For real?</option>
                <option value="false">Just show output</option>
                <option value="true">Execute for real</option>
            </select>
            <button type="submit">Synchronize</button>
        </div>
    }
</section>
    
<section class="general">
    <h2>Translation Verification</h2>
    <p>Track missing translations across all locales and fix them up.</p>
    @using (Html.BeginForm("LoadTranslations", "Home", FormMethod.Post))
    {
        <select name="providerConfigName">
            <option>Select a connection to get started.</option>
            @foreach (var config in ProviderConfig.ProviderGroups)
            {
                <option>@config.Name</option>
            }
        </select>
    }
</section>
<section class="general">
    <h2>Import / Export</h2>
    <p>CSV and XML import and export</p>
    @using (Html.BeginForm("ShowImportExport", "Home", FormMethod.Post))
    {
        <select name="providerConfigName">
            <option>Select a connection to get started.</option>
            @foreach (var config in ProviderConfig.ProviderGroups)
            {
                <option>@config.Name</option>
            }
        </select>
    }
</section>